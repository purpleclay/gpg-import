name: ci
on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "Cargo.*"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - "Cargo.*"

permissions:
  contents: read

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    name: rustfmt / stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cargo Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  clippy:
    runs-on: ubuntu-latest
    name: clippy / ${{ matrix.toolchain }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, beta]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy

      - name: Cargo Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -Dwarnings

  test:
    runs-on: ${{ matrix.os }}
    name: test / ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y faketime
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install libfaketime
          fi
        shell: bash

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  build:
    runs-on: ${{ matrix.platform.runs-on }}
    name: build / ${{ matrix.platform.name }}
    strategy:
      matrix:
        platform:
          - name: linux_x86_64_musl
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: true
          - name: linux_x86_64_gnu
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: true
          - name: linux_aarch64_musl
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true
          - name: linux_aarch64_gnu
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - name: darwin_x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - name: darwin_aarch64
            runs-on: macos-latest
            target: aarch64-apple-darwin
            use-cross: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.platform.use-cross }}
          command: build
          args: --locked --release --target ${{ matrix.platform.target }}

# Copyright (c) 2023 Purple Clay
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# in the Software without restriction, including without limitation the rights
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: release
on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.platform.runs-on }}
    name: build / ${{ matrix.platform.name }}
    strategy:
      matrix:
        platform:
          - name: linux_x86_64_musl
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: true
          - name: linux_x86_64_gnu
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: true
          - name: linux_aarch64_musl
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true
          - name: linux_aarch64_gnu
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - name: darwin_x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - name: darwin_aarch64
            runs-on: macos-latest
            target: aarch64-apple-darwin
            use-cross: false
          - name: windows_x86_64_msvc
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
          - name: windows_x86_64_gnu
            runs-on: windows-latest
            target: x86_64-pc-windows-gnu
            use-cross: false
          - name: windows_aarch64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
            use-cross: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.platform.use-cross }}
          command: build
          args: --locked --release --target ${{ matrix.platform.target }}

      - name: Archive
        id: archive
        shell: bash
        run: |
          EXE_SUFFIX=""
          case ${{ matrix.platform.target }} in
            *-pc-windows-*)
              EXE_SUFFIX=".exe"
              ;;
          esac;
          PKG_SUFFIX=".tar.gz";
          case ${{ matrix.platform.target }} in
            *-pc-windows-*)
              PKG_SUFFIX=".zip"
              ;;
          esac;
          PKG_NAME=gpg-import-${{ matrix.platform.target }}$PKG_SUFFIX
          PKG_DIR=archive/gpg-import
          mkdir -p $PKG_DIR
          cp target/${{ matrix.platform.target }}/release/gpg-import$EXE_SUFFIX $PKG_DIR/
          cp README.md LICENSE $PKG_DIR/

          pushd $PKG_DIR >/dev/null
          case ${{ matrix.platform.target }} in
            *-pc-windows-*)
              7z -y a "${PKG_NAME}" * | tail -2
              ;;
            *)
              tar czf "${PKG_NAME}" *
              ;;
          esac;
          popd >/dev/null

          # Output path to archive for future upload
          echo "archive-name=${PKG_NAME}" >> $GITHUB_OUTPUT
          echo "archive-path=${PKG_DIR}/${PKG_NAME}" >> $GITHUB_OUTPUT

      - name: Upload Archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.archive.outputs.archive-name }}
          path: ${{ steps.archive.outputs.archive-path }}
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    name: release
    permissions:
      contents: write
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Archives
        id: download
        uses: actions/download-artifact@v3
        with:
          path: /tmp/archives

      - name: Move Archives
        shell: bash
        run: |
          mkdir -p ~/archives
          find ${{ steps.download.outputs.download-path }} -type f \( -name "*.tar.gz" -o -name "*.zip" \) -exec cp {} ~/archives/ \;

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/archives/*"
          makeLatest: true
          name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
